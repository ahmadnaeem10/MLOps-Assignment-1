name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Unit Tests
        run: |
          pytest tests/
        env:
          CI: true

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  deploy_dev:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Development on Vercel
        run: vercel --prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      - name: Verify Deployment (Dev)
        run: curl https://your-dev-env.vercel.app/api/predict

  deploy_stage:
    runs-on: ubuntu-latest
    needs: deploy_dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Staging on Vercel
        run: vercel --prod --env=staging
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      - name: Verify Deployment (Stage)
        run: curl https://your-stage-env.vercel.app/api/predict

  deploy_prod:
    runs-on: ubuntu-latest
    needs: deploy_stage
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Production on Vercel
        run: vercel --prod --env=production
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      - name: Verify Deployment (Prod)
        run: curl https://your-prod-env.vercel.app/api/predict
